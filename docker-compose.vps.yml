version: '3.8'

services:
  tradingbot:
    build:
      context: .
      dockerfile: Dockerfile.vps
    container_name: trading_bot_vps
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=sqlite:///data/trading_bot.db
      - REDIS_URL=redis://redis:6379/0
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - BINANCE_API_KEY=${BINANCE_API_KEY}
      - BINANCE_SECRET=${BINANCE_SECRET}
      - EXCHANGE_SANDBOX=${EXCHANGE_SANDBOX:-false}
      - MAX_RISK_PER_TRADE=${MAX_RISK_PER_TRADE:-0.01}
      - MAX_DAILY_LOSS=${MAX_DAILY_LOSS:-0.03}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - TZ=UTC
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./results:/app/results
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "8080:8080"
    networks:
      - bot-network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8080/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:7-alpine
    container_name: trading_bot_redis_vps
    networks:
      - bot-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      redis-server
      --appendonly yes
      --maxmemory 128mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
    volumes:
      - redis_data:/data
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 128M
        reservations:
          cpus: '0.05'
          memory: 32M
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  # Optional monitoring (lightweight)
  watchtower:
    image: containrrr/watchtower:latest
    container_name: trading_bot_watchtower
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=3600
      - WATCHTOWER_INCLUDE_STOPPED=true
      - WATCHTOWER_REVIVE_STOPPED=false
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 64M
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "1"

volumes:
  redis_data:

networks:
  bot-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16 